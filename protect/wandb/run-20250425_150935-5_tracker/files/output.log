Epoch #1:   3%|#9                                                                            | 256/10000 [00:00<00:04, 2408.07it/s]
Traceback (most recent call last):
  File "/home/ace/miniconda3/envs/lnenv/lib/python3.8/site-packages/gym/envs/user/protect/main.py", line 201, in <module>
    alt_train()
  File "/home/ace/miniconda3/envs/lnenv/lib/python3.8/site-packages/gym/envs/user/protect/main.py", line 196, in alt_train
    train(active_policy=active_policy)
  File "/home/ace/miniconda3/envs/lnenv/lib/python3.8/site-packages/gym/envs/user/protect/main.py", line 139, in train
    result = OnpolicyTrainer(
  File "/home/ace/miniconda3/envs/lnenv/lib/python3.8/site-packages/tianshou/trainer/base.py", line 440, in run
    deque(self, maxlen=0)  # feed the entire iterator into a zero-length deque
  File "/home/ace/miniconda3/envs/lnenv/lib/python3.8/site-packages/tianshou/trainer/base.py", line 299, in __next__
    self.policy_update_fn(data, result)
  File "/home/ace/miniconda3/envs/lnenv/lib/python3.8/site-packages/tianshou/trainer/onpolicy.py", line 131, in policy_update_fn
    losses = self.policy.update(
  File "/home/ace/miniconda3/envs/lnenv/lib/python3.8/site-packages/gym/envs/user/protect/policy.py", line 195, in update
    return self.policy_a.update(sample_size, buffer, **kwargs)
  File "/home/ace/miniconda3/envs/lnenv/lib/python3.8/site-packages/tianshou/policy/base.py", line 276, in update
    batch = self.process_fn(batch, buffer, indices)
  File "/home/ace/miniconda3/envs/lnenv/lib/python3.8/site-packages/tianshou/policy/modelfree/ppo.py", line 100, in process_fn
    old_log_prob.append(self(minibatch).dist.log_prob(minibatch.act))
  File "/home/ace/miniconda3/envs/lnenv/lib/python3.8/site-packages/torch/distributions/categorical.py", line 137, in log_prob
    self._validate_sample(value)
  File "/home/ace/miniconda3/envs/lnenv/lib/python3.8/site-packages/torch/distributions/distribution.py", line 312, in _validate_sample
    raise ValueError(
ValueError: Expected value argument (Tensor of shape (256,)) to be within the support (IntegerInterval(lower_bound=0, upper_bound=23)) of the distribution Categorical(probs: torch.Size([256, 24])), but found invalid values:
tensor([423.,  85., 161., 485., 571., 184., 134., 151., 404., 288., 447., 185.,
        371., 426., 524., 194., 490., 443., 208.,  28., 176., 377., 417., 247.,
        108.,  68., 525., 277., 117., 320.,  70., 310., 498., 422., 545., 572.,
        396., 270., 384., 303., 475., 408., 357., 513.,  68.,  95.,  48., 149.,
        192., 569., 107., 290., 360., 444.,  41., 168., 489., 228., 299., 338.,
        247., 185., 443., 398., 214., 459., 216., 479., 107., 261., 545., 346.,
        153., 487., 478., 227., 460., 141., 419., 251., 103., 327., 253., 317.,
        100., 286., 396., 342., 230., 200., 516., 297., 187., 344., 329.,  69.,
        400., 318., 523., 143., 437., 104., 435., 497., 105., 208., 116., 467.,
        544., 250., 166.,  49., 373., 404., 425.,  42., 357., 153., 161., 476.,
          2., 376., 246.,  12., 349., 393., 572., 402., 298., 184., 348., 161.,
         53.,  43., 303., 314., 221.,  80., 496., 570., 547., 403., 525., 128.,
        179., 403.,  27., 443., 172., 238., 111.,   7.,  28., 436., 489., 363.,
        238., 295., 209., 568., 485., 255., 410., 249., 133.,  41., 535., 542.,
        502.,  49., 303., 121., 507., 562., 368., 224., 266., 491.,  69., 474.,
        412., 250., 225.,  78., 180., 232.,   1., 501., 337., 109., 339., 144.,
        105., 222.,  19., 488., 236., 502.,  36., 164., 569., 451., 193., 160.,
        478., 388.,  10., 400.,  83., 325., 423.,  23., 418., 126., 434., 496.,
         70., 451., 346., 209.,  83., 256., 537., 517., 449., 114., 150.,  89.,
        310., 129., 313.,  68., 393., 521., 361., 476.,  15., 395., 245., 351.,
        559., 206., 298., 174., 233., 497., 187., 516., 105., 178., 540., 486.,
        158., 162., 272., 399.])
